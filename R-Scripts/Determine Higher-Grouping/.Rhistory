reduced<- proD$coords[,,subfam%in% use]
pro_red<-gpagen(reduced, surfaces = NULL, curves= sliders,
PrinAxes = FALSE, max.iter = NULL, ProcD = F, Proj = TRUE,
print.progress = TRUE)
subfam1<-as.factor(substr(dimnames(pro_red$coords)[[3]],8,13))
species1<-as.factor(substr(dimnames(pro_red$coords)[[3]],1,6))
tribe1<-as.factor(substr(dimnames(pro_red$coords)[[3]],17,19))
gdf <- geomorph.data.frame(pro_red, group = subfam1, species =species1)
fit.size <- procD.lm(coords ~ log(Csize), data = gdf, print.progress = FALSE)
summary(fit.size)
plot(fit.size, type = "regression", reg.type = "PredLine", predictor = log(gdf$Csize), col= subfam1)
PCA <-plotTangentSpace(pro_red$coords, groups=subfam1, legend=T)
data = data.frame(species1, subfam1, PCA$pc.scores[,1:25])
pvclust(data, method.hclust="ward.D2")
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
require(Morpho)
require(rgl)
options(rgl.useNULL = TRUE) # Suppress the separate window.
knitr::knit_hooks$set(webgl = hook_webgl)
library(geomorph)
setwd("~/GitHub/Ichneumonidae/R-Scripts/Determine Higher-Grouping")
give_color <- function(subfamily) {
if(!is.vector(subfamily)){
color <- switch(substr(subfamily,8,13), "banchi" = "goldenrod1", "fossil"="black", "ophion" = "blueviolet",  "phygad" = "violet","pimpli" = "chartreuse3", "ichneu" = "grey")}
else{
color = matrix( NA, length(subfamily))
for(i in 1:length(subfamily)){
color[i] <-switch(if(nchar(subfamily[i])>13){substr(subfamily[i],8,13)}else{substr(subfamily[i],1,6)}, "banchi" = "goldenrod1", "fossil"="black", "ophion" = "blueviolet",  "phygad" = "violet","pimpli" = "chartreuse3")
}
}
return(color)
}
landmark = readland.tps("blockcourse_highersub.tps",specID = "ID", readcurves = T, warnmsg = TRUE)
##      define classifiers (subfam or tribes)
species = as.factor( substr( dimnames(landmark)[[3]], 1, 6))
subfam = as.factor( substr( dimnames(landmark)[[3]], 8, 13))
areolet = as.factor( substr( dimnames(landmark)[[3]], 15, 15))
tribe = as.factor( substr( dimnames(landmark)[[3]], 17, 19))
##      define Semilandmarks, first LM is the start, last one the end (those are both
##      fixed landmarks, in between are the semilandmarks):
sliders = define.sliders(c(15,22:29,16))
##      procrustes fit - "superimposition" - rotates and scales the landmarks to their closest distance,
##      minimizing the shape and size difference:
use= c("pimpli", "banchi", "phygad", "ophion", "fossil")
proD<-gpagen(landmark, surfaces = NULL, curves= sliders,
PrinAxes = FALSE, max.iter = NULL, ProcD = F, Proj = TRUE,
print.progress = TRUE)
reduced<- proD$coords[,,subfam%in% use]
pro_red<-gpagen(reduced, surfaces = NULL, curves= sliders,
PrinAxes = FALSE, max.iter = NULL, ProcD = F, Proj = TRUE,
print.progress = TRUE)
subfam1<-as.factor(substr(dimnames(pro_red$coords)[[3]],8,13))
species1<-as.factor(substr(dimnames(pro_red$coords)[[3]],1,6))
tribe1<-as.factor(substr(dimnames(pro_red$coords)[[3]],17,19))
gdf <- geomorph.data.frame(pro_red, group = subfam1, species =species1)
fit.size <- procD.lm(coords ~ log(Csize), data = gdf, print.progress = FALSE)
summary(fit.size)
plot(fit.size, type = "regression", reg.type = "PredLine", predictor = log(gdf$Csize), col= subfam1)
PCA <-plotTangentSpace(pro_red$coords, groups=subfam1, legend=T)
data = data.frame(species1, subfam1, PCA$pc.scores[,1:25])
pvclust(data, method.hclust="ward.D2")
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
require(Morpho)
require(rgl)
options(rgl.useNULL = TRUE) # Suppress the separate window.
knitr::knit_hooks$set(webgl = hook_webgl)
library(geomorph)
setwd("~/GitHub/Ichneumonidae/R-Scripts/Determine Higher-Grouping")
## the more beautiful version:
mat <- matrix(c(4,5,0,1,1,2,1,1,3), 3)
layout(mat, widths=c(1,1,1), heights=c(1,1,1))# set the size of the rows and columns
my_colors = matrix( NA, dim(PCA$pc.scores[,]))
for(i in 1:length( row.names(PCA$pc.scores[,]))){
my_colors[i] <- switch(substr(row.names(PCA$pc.scores[,])[i],8,13), "banchi" = "goldenrod1", "fossil"="black", "ophion" = "blueviolet",  "phygad" = "violet","pimpli" = "chartreuse3")
}
par(mar=c(4, 4, 1, 1)) # sets the margins
plot(PCA$pc.scores[,1],PCA$pc.scores[,2], col=my_colors, asp=T, las=1,pch=16, cex=1.5)
legend("topright", legend= levels(subfam1), col= c("goldenrod1", "black", "blueviolet", "violet", "chartreuse3"), pch=rep(19,14) )
segments(min(PCA$pc.scores[,1]), 0,  max(PCA$pc.scores[,1]),0, col="grey", lty="dashed")
segments(0, min(PCA$pc.scores[,2]), 0,  max(PCA$pc.scores[,2]), col="grey", lty="dashed")
# in order to name individuals: text(PCA$pc.scores[,1],PCA$pc.scores[,2], species)
ref <- mshape(proD$coords)
par(mar = c(0,0,0,0)) # sets the margins
plotRefToTarget(ref,PCA$pc.shapes$PC1min)
# Item 3
plotRefToTarget(ref,PCA$pc.shapes$PC1max)
# Item 4
plotRefToTarget(ref,PCA$pc.shapes$PC2max)
# Item 5
plotRefToTarget(ref,PCA$pc.shapes$PC2min)
## the more beautiful version:
mat <- matrix(c(4,5,0,1,1,2,1,1,3), 3)
layout(mat, widths=c(1,1,1), heights=c(1,1,1))# set the size of the rows and columns
my_colors = give_color(row.names(PCA$pc.scores))
pdf("PCA.pdf", width = 10, height= 9)
par(mar=c(4, 4, 1, 1)) # sets the margins
x<- ("~/GitHub/Ichneumonidae/R-Scripts/Determine Higher-Grouping")
plot(PCA$pc.scores[,1],PCA$pc.scores[,2], col=my_colors, asp=T, las=1,pch=16, cex=1.5, xlab = "PC1 (36.4%)", ylab = "PC2 (21.4%)", bty="n", main = "PCA of higher-groupings", cex.main=1.5)
legend("bottomleft", legend= levels(subfam1), col= give_color(levels(subfam1)), pch=rep(19,14) )
segments(min(PCA$pc.scores[,1]), 0,  max(PCA$pc.scores[,1]),0, col="grey", lty="dashed")
segments(0, min(PCA$pc.scores[,2]), 0,  max(PCA$pc.scores[,2]), col="grey", lty="dashed")
# in order to name individuals: text(PCA$pc.scores[,1],PCA$pc.scores[,2], species)
ref <- mshape(pro_red$coords)
par(mar = c(0,0,0,0)) # sets the margins
dev.off()
#plotRefToTarget(ref,PCA$pc.shapes$PC1min)
# Item 3
#plotRefToTarget(ref,PCA$pc.shapes$PC1max)
# Item 4
#plotRefToTarget(ref,PCA$pc.shapes$PC2max)
# Item 5
#plotRefToTarget(ref,PCA$pc.shapes$PC2min)
#CVA
cva<- CVA(pro_red$coords, groups = subfam1, plot= T, rounds= 1000)
# plot the CVA
mat <- matrix(c(4,5,0,1,1,2,1,1,3), 3)
layout(mat, widths=c(1,1,1), heights=c(1,1,1))
#plot the data
par(mar=c(4, 4, 1, 1))
plot(cva$CVscores, col=give_color(row.names(cva$CVscores)), pch=16,asp=T,
xlab=paste("1st canonical axis", paste(round(cva$Var[1,2],1),"%")),
ylab=paste("2nd canonical axis", paste(round(cva$Var[2,2],1),"%")),
las=1, cex=1)
legend("bottomright", legend = levels(subfam1), col = give_color(levels(subfam1)), pch = 16)
##  add hulls to plot (merge groups)
for(jj in 1:length(levels(subfam1))){
ii=levels(subfam1)[jj]
kk=chull(cva$CVscores[subfam1==ii,1:2])
lines(cva$CVscores[subfam1==ii,1][c(kk, kk[1])],
cva$CVscores[subfam1==ii,2][c(kk, kk[1])], col=give_color(ii))
}
#lines that seperate the different types of wings
segments(min(cva$CVscores[,1]), 0,  max(cva$CVscores[,1]),0, col="grey", lty="dashed")
segments(0, min(cva$CVscores[,2]), 0,  max(cva$CVscores[,2]), col="grey", lty="dashed")
#links for the warpgrid that defines how LM are interlinked
array1 <- c(1,1,1,2,2,3,3,4,4,5,5,6,7,8,9,9,10,10,11,11,12,14,14,16,16,17,18,20)
array2 <- c(2,5,8,3,5,4,7,12,20,8,6,7,12,9,19,10,11,17,15,12,13,15,20,17,21,18,19,21)
warpgrid <- array(c(array1, array2), dim= c(28,2))
par(mar = c(0,0,0,0))
plotRefToTarget(ref,PCA$pc.shapes$PC1max, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5))
#plot the mean against the maxima of different shapes.
plotRefToTarget(ref,PCA$pc.shapes$PC1min, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5, link.lwd=2, tar.link.lwd = 2))
plotRefToTarget(ref,PCA$pc.shapes$PC2max, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5))
plotRefToTarget(ref,PCA$pc.shapes$PC2min, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5))
## the more beautiful version:
mat <- matrix(c(4,5,0,1,1,2,1,1,3), 3)
layout(mat, widths=c(1,1,1), heights=c(1,1,1))# set the size of the rows and columns
my_colors = give_color(row.names(PCA$pc.scores))
pdf("PCA.pdf", width = 10, height= 9)
par(mar=c(4, 4, 1, 1)) # sets the margins
x<- ("~/GitHub/Ichneumonidae/R-Scripts/Determine Higher-Grouping")
plot(PCA$pc.scores[,1],PCA$pc.scores[,2], col=my_colors, asp=T, las=1,pch=16, cex=1.5, xlab = "PC1 (36.4%)", ylab = "PC2 (21.4%)", bty="n", main = "PCA of higher-groupings", cex.main=1.5)
legend("bottomleft", legend= levels(subfam1), col= give_color(levels(subfam1)), pch=rep(19,14) )
#links for the warpgrid that defines how LM are interlinked
array1 <- c(1,1,1,2,2,3,3,4,4,5,5,6,7,8,9,9,10,10,11,11,12,14,14,16,16,17,18,20)
array2 <- c(2,5,8,3,5,4,7,12,20,8,6,7,12,9,19,10,11,17,15,12,13,15,20,17,21,18,19,21)
warpgrid <- array(c(array1, array2), dim= c(28,2))
segments(min(PCA$pc.scores[,1]), 0,  max(PCA$pc.scores[,1]),0, col="grey", lty="dashed")
segments(0, min(PCA$pc.scores[,2]), 0,  max(PCA$pc.scores[,2]), col="grey", lty="dashed")
# in order to name individuals: text(PCA$pc.scores[,1],PCA$pc.scores[,2], species)
ref <- mshape(pro_red$coords)
par(mar = c(0,0,0,0)) # sets the margins
dev.off()
#plotRefToTarget(ref,PCA$pc.shapes$PC1min)
# Item 3
#plotRefToTarget(ref,PCA$pc.shapes$PC1max)
# Item 4
#plotRefToTarget(ref,PCA$pc.shapes$PC2max)
# Item 5
#plotRefToTarget(ref,PCA$pc.shapes$PC2min)
## the more beautiful version:
mat <- matrix(c(4,5,0,1,1,2,1,1,3), 3)
layout(mat, widths=c(1,1,1), heights=c(1,1,1))# set the size of the rows and columns
my_colors = give_color(row.names(PCA$pc.scores))
pdf("PCA.pdf", width = 10, height= 9)
par(mar=c(4, 4, 1, 1)) # sets the margins
x<- ("~/GitHub/Ichneumonidae/R-Scripts/Determine Higher-Grouping")
plot(PCA$pc.scores[,1],PCA$pc.scores[,2], col=my_colors, asp=T, las=1,pch=16, cex=1.5, xlab = "PC1 (36.4%)", ylab = "PC2 (21.4%)", bty="n", main = "PCA of higher-groupings", cex.main=1.5)
legend("bottomleft", legend= levels(subfam1), col= give_color(levels(subfam1)), pch=rep(19,14) )
plotRefToTarget(ref,PCA$pc.shapes$PC1max, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5))
#plot the mean against the maxima of different shapes.
plotRefToTarget(ref,PCA$pc.shapes$PC1min, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5, link.lwd=2, tar.link.lwd = 2))
plotRefToTarget(ref,PCA$pc.shapes$PC2max, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5))
plotRefToTarget(ref,PCA$pc.shapes$PC2min, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5))
segments(min(PCA$pc.scores[,1]), 0,  max(PCA$pc.scores[,1]),0, col="grey", lty="dashed")
segments(0, min(PCA$pc.scores[,2]), 0,  max(PCA$pc.scores[,2]), col="grey", lty="dashed")
# in order to name individuals: text(PCA$pc.scores[,1],PCA$pc.scores[,2], species)
ref <- mshape(pro_red$coords)
par(mar = c(0,0,0,0)) # sets the margins
dev.off()
#plotRefToTarget(ref,PCA$pc.shapes$PC1min)
# Item 3
#plotRefToTarget(ref,PCA$pc.shapes$PC1max)
# Item 4
#plotRefToTarget(ref,PCA$pc.shapes$PC2max)
# Item 5
#plotRefToTarget(ref,PCA$pc.shapes$PC2min)
par(mar=c(4, 4, 1, 1)) # sets the margins
x<- ("~/GitHub/Ichneumonidae/R-Scripts/Determine Higher-Grouping")
plot(PCA$pc.scores[,1],PCA$pc.scores[,2], col=my_colors, asp=T, las=1,pch=16, cex=1.5, xlab = "PC1 (36.4%)", ylab = "PC2 (21.4%)", bty="n", main = "PCA of higher-groupings", cex.main=1.5)
legend("bottomleft", legend= levels(subfam1), col= give_color(levels(subfam1)), pch=rep(19,14) )
plotRefToTarget(ref,PCA$pc.shapes$PC1max, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5))
#plot the mean against the maxima of different shapes.
plotRefToTarget(ref,PCA$pc.shapes$PC1min, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5, link.lwd=2, tar.link.lwd = 2))
plotRefToTarget(ref,PCA$pc.shapes$PC2max, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5))
plotRefToTarget(ref,PCA$pc.shapes$PC2min, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5))
## the more beautiful version:
mat <- matrix(c(4,5,0,1,1,2,1,1,3), 3)
layout(mat, widths=c(1,1,1), heights=c(1,1,1))# set the size of the rows and columns
my_colors = give_color(row.names(PCA$pc.scores))
pdf("PCA.pdf", width = 10, height= 9)
par(mar=c(4, 4, 1, 1)) # sets the margins
x<- ("~/GitHub/Ichneumonidae/R-Scripts/Determine Higher-Grouping")
plot(PCA$pc.scores[,1],PCA$pc.scores[,2], col=my_colors, asp=T, las=1,pch=16, cex=1.5, xlab = "PC1 (36.4%)", ylab = "PC2 (21.4%)", bty="n", main = "PCA of higher-groupings", cex.main=1.5)
legend("bottomleft", legend= levels(subfam1), col= give_color(levels(subfam1)), pch=rep(19,14) )
plotRefToTarget(ref,PCA$pc.shapes$PC1max, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5))
#plot the mean against the maxima of different shapes.
plotRefToTarget(ref,PCA$pc.shapes$PC1min, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5, link.lwd=2, tar.link.lwd = 2))
plotRefToTarget(ref,PCA$pc.shapes$PC2max, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5))
plotRefToTarget(ref,PCA$pc.shapes$PC2min, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5))
segments(min(PCA$pc.scores[,1]), 0,  max(PCA$pc.scores[,1]),0, col="grey", lty="dashed")
segments(0, min(PCA$pc.scores[,2]), 0,  max(PCA$pc.scores[,2]), col="grey", lty="dashed")
# in order to name individuals: text(PCA$pc.scores[,1],PCA$pc.scores[,2], species)
ref <- mshape(pro_red$coords)
par(mar = c(0,0,0,0)) # sets the margins
dev.off()
#plotRefToTarget(ref,PCA$pc.shapes$PC1min)
# Item 3
#plotRefToTarget(ref,PCA$pc.shapes$PC1max)
# Item 4
#plotRefToTarget(ref,PCA$pc.shapes$PC2max)
# Item 5
#plotRefToTarget(ref,PCA$pc.shapes$PC2min)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
require(Morpho)
require(rgl)
options(rgl.useNULL = TRUE) # Suppress the separate window.
knitr::knit_hooks$set(webgl = hook_webgl)
library(geomorph)
setwd("~/GitHub/Ichneumonidae/R-Scripts/Determine Higher-Grouping")
give_color <- function(subfamily) {
if(!is.vector(subfamily)){
color <- switch(substr(subfamily,8,13), "banchi" = "goldenrod1", "fossil"="black", "ophion" = "blueviolet",  "phygad" = "violet","pimpli" = "chartreuse3", "ichneu" = "grey")}
else{
color = matrix( NA, length(subfamily))
for(i in 1:length(subfamily)){
color[i] <-switch(if(nchar(subfamily[i])>13){substr(subfamily[i],8,13)}else{substr(subfamily[i],1,6)}, "banchi" = "goldenrod1", "fossil"="black", "ophion" = "blueviolet",  "phygad" = "violet","pimpli" = "chartreuse3")
}
}
return(color)
}
landmark = readland.tps("blockcourse_highersub.tps",specID = "ID", readcurves = T, warnmsg = TRUE)
##      define classifiers (subfam or tribes)
species = as.factor( substr( dimnames(landmark)[[3]], 1, 6))
subfam = as.factor( substr( dimnames(landmark)[[3]], 8, 13))
areolet = as.factor( substr( dimnames(landmark)[[3]], 15, 15))
tribe = as.factor( substr( dimnames(landmark)[[3]], 17, 19))
##      define Semilandmarks, first LM is the start, last one the end (those are both
##      fixed landmarks, in between are the semilandmarks):
sliders = define.sliders(c(15,22:29,16))
##      procrustes fit - "superimposition" - rotates and scales the landmarks to their closest distance,
##      minimizing the shape and size difference:
use= c("pimpli", "banchi", "phygad", "ophion", "fossil")
proD<-gpagen(landmark, surfaces = NULL, curves= sliders,
PrinAxes = FALSE, max.iter = NULL, ProcD = F, Proj = TRUE,
print.progress = TRUE)
reduced<- proD$coords[,,subfam%in% use]
pro_red<-gpagen(reduced, surfaces = NULL, curves= sliders,
PrinAxes = FALSE, max.iter = NULL, ProcD = F, Proj = TRUE,
print.progress = TRUE)
subfam1<-as.factor(substr(dimnames(pro_red$coords)[[3]],8,13))
species1<-as.factor(substr(dimnames(pro_red$coords)[[3]],1,6))
tribe1<-as.factor(substr(dimnames(pro_red$coords)[[3]],17,19))
gdf <- geomorph.data.frame(pro_red, group = subfam1, species =species1)
fit.size <- procD.lm(coords ~ log(Csize), data = gdf, print.progress = FALSE)
summary(fit.size)
plot(fit.size, type = "regression", reg.type = "PredLine", predictor = log(gdf$Csize), col= subfam1)
PCA <-plotTangentSpace(pro_red$coords, groups=subfam1, legend=T)
data = data.frame(species1, subfam1, PCA$pc.scores[,1:25])
pvclust(data, method.hclust="ward.D2")
PCA <-plotTangentSpace(pro_red$coords, groups=subfam1, legend=T)
data = data.frame(species1, subfam1, PCA$pc.scores[,1:25])
summary(PCA)
## the more beautiful version:
mat <- matrix(c(4,5,0,1,1,2,1,1,3), 3)
layout(mat, widths=c(1,1,1), heights=c(1,1,1))# set the size of the rows and columns
my_colors = give_color(row.names(PCA$pc.scores))
pdf("PCA.pdf", width = 10, height= 9)
par(mar=c(4, 4, 1, 1)) # sets the margins
x<- ("~/GitHub/Ichneumonidae/R-Scripts/Determine Higher-Grouping")
plot(PCA$pc.scores[,1],PCA$pc.scores[,2], col=my_colors, asp=T, las=1,pch=16, cex=1.5, xlab = "PC1 (36.4%)", ylab = "PC2 (21.4%)", bty="n", main = "PCA of higher-groupings", cex.main=1.5)
legend("bottomleft", legend= levels(subfam1), col= give_color(levels(subfam1)), pch=rep(19,14) )
segments(min(PCA$pc.scores[,1]), 0,  max(PCA$pc.scores[,1]),0, col="grey", lty="dashed")
segments(0, min(PCA$pc.scores[,2]), 0,  max(PCA$pc.scores[,2]), col="grey", lty="dashed")
# in order to name individuals: text(PCA$pc.scores[,1],PCA$pc.scores[,2], species)
ref <- mshape(pro_red$coords)
par(mar = c(0,0,0,0)) # sets the margins
array1 <- c(1,1,1,2,2,3,3,4,4,5,5,6,7,8,9,9,10,10,11,11,12,14,14,16,16,17,18,20)
array2 <- c(2,5,8,3,5,4,7,12,20,8,6,7,12,9,19,10,11,17,15,12,13,15,20,17,21,18,19,21)
warpgrid <- array(c(array1, array2), dim= c(28,2))
plotRefToTarget(ref,PCA$pc.shapes$PC1max, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5))
#plot the mean against the maxima of different shapes.
plotRefToTarget(ref,PCA$pc.shapes$PC1min, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5, link.lwd=2, tar.link.lwd = 2))
plotRefToTarget(ref,PCA$pc.shapes$PC2max, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5))
plotRefToTarget(ref,PCA$pc.shapes$PC2min, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5))
## the more beautiful version:
mat <- matrix(c(4,5,0,1,1,2,1,1,3), 3)
layout(mat, widths=c(1,1,1), heights=c(1,1,1))# set the size of the rows and columns
my_colors = give_color(row.names(PCA$pc.scores))
#pdf("PCA.pdf", width = 10, height= 9)
par(mar=c(4, 4, 1, 1)) # sets the margins
x<- ("~/GitHub/Ichneumonidae/R-Scripts/Determine Higher-Grouping")
plot(PCA$pc.scores[,1],PCA$pc.scores[,2], col=my_colors, asp=T, las=1,pch=16, cex=1.5, xlab = "PC1 (36.4%)", ylab = "PC2 (21.4%)", bty="n", main = "PCA of higher-groupings", cex.main=1.5)
legend("bottomleft", legend= levels(subfam1), col= give_color(levels(subfam1)), pch=rep(19,14) )
segments(min(PCA$pc.scores[,1]), 0,  max(PCA$pc.scores[,1]),0, col="grey", lty="dashed")
segments(0, min(PCA$pc.scores[,2]), 0,  max(PCA$pc.scores[,2]), col="grey", lty="dashed")
# in order to name individuals: text(PCA$pc.scores[,1],PCA$pc.scores[,2], species)
ref <- mshape(pro_red$coords)
par(mar = c(0,0,0,0)) # sets the margins
array1 <- c(1,1,1,2,2,3,3,4,4,5,5,6,7,8,9,9,10,10,11,11,12,14,14,16,16,17,18,20)
array2 <- c(2,5,8,3,5,4,7,12,20,8,6,7,12,9,19,10,11,17,15,12,13,15,20,17,21,18,19,21)
warpgrid <- array(c(array1, array2), dim= c(28,2))
plotRefToTarget(ref,PCA$pc.shapes$PC1max, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5))
#plot the mean against the maxima of different shapes.
plotRefToTarget(ref,PCA$pc.shapes$PC1min, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5, link.lwd=2, tar.link.lwd = 2))
plotRefToTarget(ref,PCA$pc.shapes$PC2max, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5))
plotRefToTarget(ref,PCA$pc.shapes$PC2min, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5))
## the more beautiful version:
mat <- matrix(c(4,5,0,1,1,2,1,1,3), 3)
layout(mat, widths=c(1,1,1), heights=c(1,1,1))# set the size of the rows and columns
my_colors = give_color(row.names(PCA$pc.scores))
#pdf("PCA.pdf", width = 10, height= 9)
par(mar=c(4, 4, 1, 1)) # sets the margins
x<- ("~/GitHub/Ichneumonidae/R-Scripts/Determine Higher-Grouping")
plot(PCA$pc.scores[,1],PCA$pc.scores[,2], col=my_colors, asp=T, las=1,pch=16, cex=1.5, xlab = "PC1 (36.4%)", ylab = "PC2 (21.4%)", bty="n", main = "PCA of higher-groupings", cex.main=1.5)
legend("bottomleft", legend= levels(subfam1), col= give_color(levels(subfam1)), pch=rep(19,14) )
segments(min(PCA$pc.scores[,1]), 0,  max(PCA$pc.scores[,1]),0, col="grey", lty="dashed")
segments(0, min(PCA$pc.scores[,2]), 0,  max(PCA$pc.scores[,2]), col="grey", lty="dashed")
# in order to name individuals: text(PCA$pc.scores[,1],PCA$pc.scores[,2], species)
ref <- mshape(pro_red$coords)
par(mar = c(0,0,0,0)) # sets the margins
array1 <- c(1,1,1,2,2,3,3,4,4,5,5,6,7,8,9,9,10,10,11,11,12,14,14,16,16,17,18,20)
array2 <- c(2,5,8,3,5,4,7,12,20,8,6,7,12,9,19,10,11,17,15,12,13,15,20,17,21,18,19,21)
warpgrid <- array(c(array1, array2), dim= c(28,2))
plotRefToTarget(ref,PCA$pc.shapes$PC1min, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5))
#plot the mean against the maxima of different shapes.
plotRefToTarget(ref,PCA$pc.shapes$PC1max, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5, link.lwd=2, tar.link.lwd = 2))
plotRefToTarget(ref,PCA$pc.shapes$PC2min, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5))
plotRefToTarget(ref,PCA$pc.shapes$PC2max, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5))
## the more beautiful version:
mat <- matrix(c(4,5,0,1,1,2,1,1,3), 3)
layout(mat, widths=c(1,1,1), heights=c(1,1,1))# set the size of the rows and columns
my_colors = give_color(row.names(PCA$pc.scores))
#pdf("PCA.pdf", width = 10, height= 9)
par(mar=c(4, 4, 1, 1)) # sets the margins
x<- ("~/GitHub/Ichneumonidae/R-Scripts/Determine Higher-Grouping")
plot(PCA$pc.scores[,1],PCA$pc.scores[,2], col=my_colors, asp=T, las=1,pch=16, cex=1.5, xlab = "PC1 (36.4%)", ylab = "PC2 (21.4%)", bty="n", main = "PCA of higher-groupings", cex.main=1.5)
legend("bottomleft", legend= levels(subfam1), col= give_color(levels(subfam1)), pch=rep(19,14) )
segments(min(PCA$pc.scores[,1]), 0,  max(PCA$pc.scores[,1]),0, col="grey", lty="dashed")
segments(0, min(PCA$pc.scores[,2]), 0,  max(PCA$pc.scores[,2]), col="grey", lty="dashed")
# in order to name individuals: text(PCA$pc.scores[,1],PCA$pc.scores[,2], species)
ref <- mshape(pro_red$coords)
par(mar = c(0,0,0,0)) # sets the margins
array1 <- c(1,1,1,2,2,3,3,4,4,5,5,6,7,8,9,9,10,10,11,11,12,14,14,16,16,17,18,20)
array2 <- c(2,5,8,3,5,4,7,12,20,8,6,7,12,9,19,10,11,17,15,12,13,15,20,17,21,18,19,21)
warpgrid <- array(c(array1, array2), dim= c(28,2))
plotRefToTarget(ref,PCA$pc.shapes$PC1min, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5))
#plot the mean against the maxima of different shapes.
plotRefToTarget(ref,PCA$pc.shapes$PC1max, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5, link.lwd=2, tar.link.lwd = 2))
plotRefToTarget(ref,PCA$pc.shapes$PC2min, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5))
# plotRefToTarget(ref,PCA$pc.shapes$PC2max, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5))
## the more beautiful version:
mat <- matrix(c(4,5,0,1,1,2,1,1,3), 3)
layout(mat, widths=c(1,1,1), heights=c(1,1,1))# set the size of the rows and columns
my_colors = give_color(row.names(PCA$pc.scores))
#pdf("PCA.pdf", width = 10, height= 9)
par(mar=c(4, 4, 1, 1)) # sets the margins
x<- ("~/GitHub/Ichneumonidae/R-Scripts/Determine Higher-Grouping")
plot(PCA$pc.scores[,1],PCA$pc.scores[,2], col=my_colors, asp=T, las=1,pch=16, cex=1.5, xlab = "PC1 (36.4%)", ylab = "PC2 (21.4%)", bty="n", main = "PCA of higher-groupings", cex.main=1.5)
legend("bottomleft", legend= levels(subfam1), col= give_color(levels(subfam1)), pch=rep(19,14) )
segments(min(PCA$pc.scores[,1]), 0,  max(PCA$pc.scores[,1]),0, col="grey", lty="dashed")
segments(0, min(PCA$pc.scores[,2]), 0,  max(PCA$pc.scores[,2]), col="grey", lty="dashed")
# in order to name individuals: text(PCA$pc.scores[,1],PCA$pc.scores[,2], species)
ref <- mshape(pro_red$coords)
par(mar = c(0,0,0,0)) # sets the margins
array1 <- c(1,1,1,2,2,3,3,4,4,5,5,6,7,8,9,9,10,10,11,11,12,14,14,16,16,17,18,20)
array2 <- c(2,5,8,3,5,4,7,12,20,8,6,7,12,9,19,10,11,17,15,12,13,15,20,17,21,18,19,21)
warpgrid <- array(c(array1, array2), dim= c(28,2))
plotRefToTarget(ref,PCA$pc.shapes$PC1min, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5))
#plot the mean against the maxima of different shapes.
plotRefToTarget(ref,PCA$pc.shapes$PC1max, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5, link.lwd=2, tar.link.lwd = 2))
plotRefToTarget(ref,PCA$pc.shapes$PC2max, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5))
plotRefToTarget(ref,PCA$pc.shapes$PC2min, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5))
```{r plot,echo=FALSE}
## the more beautiful version:
mat <- matrix(c(4,5,0,1,1,2,1,1,3), 3)
layout(mat, widths=c(1,1,1), heights=c(1,1,1))# set the size of the rows and columns
my_colors = give_color(row.names(PCA$pc.scores))
#pdf("PCA.pdf", width = 10, height= 9)
par(mar=c(4, 4, 1, 1)) # sets the margins
x<- ("~/GitHub/Ichneumonidae/R-Scripts/Determine Higher-Grouping")
plot(PCA$pc.scores[,1],PCA$pc.scores[,2], col=my_colors, asp=T, las=1,pch=16, cex=1.5, xlab = "PC1 (36.4%)", ylab = "PC2 (21.4%)", bty="n", main = "PCA of higher-groupings", cex.main=1.5)
legend("bottomleft", legend= levels(subfam1), col= give_color(levels(subfam1)), pch=rep(19,14) )
segments(min(PCA$pc.scores[,1]), 0,  max(PCA$pc.scores[,1]),0, col="grey", lty="dashed")
segments(0, min(PCA$pc.scores[,2]), 0,  max(PCA$pc.scores[,2]), col="grey", lty="dashed")
# in order to name individuals: text(PCA$pc.scores[,1],PCA$pc.scores[,2], species)
ref <- mshape(pro_red$coords)
par(mar = c(0,0,0,0)) # sets the margins
array1 <- c(1,1,1,2,2,3,3,4,4,5,5,6,7,8,9,9,10,10,11,11,12,14,14,16,16,17,18,20)
array2 <- c(2,5,8,3,5,4,7,12,20,8,6,7,12,9,19,10,11,17,15,12,13,15,20,17,21,18,19,21)
warpgrid <- array(c(array1, array2), dim= c(28,2))
plotRefToTarget(ref,PCA$pc.shapes$PC1min, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5))
#plot the mean against the maxima of different shapes.
plotRefToTarget(ref,PCA$pc.shapes$PC1max, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5, link.lwd=2, tar.link.lwd = 2))
plotRefToTarget(ref,PCA$pc.shapes$PC2max, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5))
plotRefToTarget(ref,PCA$pc.shapes$PC2min, method = "points", links= warpgrid,gridPars = gridPar(pt.bg = "grey",pt.size=0.5, tar.pt.bg = "darkorange" ,tar.link.col = "darkorange", tar.pt.size = 0.5))
#CVA
cva<- CVA(pro_red$coords, groups = subfam1, plot= T, rounds= 1000)
# plot the CVA
mat <- matrix(c(4,5,0,1,1,2,1,1,3), 3)
layout(mat, widths=c(1,1,1), heights=c(1,1,1))
#plot the data
par(mar=c(4, 4, 1, 1))
plot(cva$CVscores, col=give_color(row.names(cva$CVscores)), pch=16,asp=T,
xlab=paste("1st canonical axis", paste(round(cva$Var[1,2],1),"%")),
ylab=paste("2nd canonical axis", paste(round(cva$Var[2,2],1),"%")),
las=1, cex=1)
legend("bottomright", legend = levels(subfam1), col = give_color(levels(subfam1)), pch = 16)
##  add hulls to plot (merge groups)
for(jj in 1:length(levels(subfam1))){
ii=levels(subfam1)[jj]
kk=chull(cva$CVscores[subfam1==ii,1:2])
lines(cva$CVscores[subfam1==ii,1][c(kk, kk[1])],
cva$CVscores[subfam1==ii,2][c(kk, kk[1])], col=give_color(ii))
}
#lines that seperate the different types of wings
segments(min(cva$CVscores[,1]), 0,  max(cva$CVscores[,1]),0, col="grey", lty="dashed")
segments(0, min(cva$CVscores[,2]), 0,  max(cva$CVscores[,2]), col="grey", lty="dashed")
#CVA
cva<- CVA(pro_red$coords, groups = subfam1, plot= T, rounds= 1000)
# plot the CVA
mat <- matrix(c(4,5,0,1,1,2,1,1,3), 3)
layout(mat, widths=c(1,1,1), heights=c(1,1,1))
#plot the data
par(mar=c(4, 4, 1, 1))
plot(cva$CVscores, col=give_color(row.names(cva$CVscores)), pch=16,asp=T,
xlab=paste("1st canonical axis", paste(round(cva$Var[1,2],1),"%")),
ylab=paste("2nd canonical axis", paste(round(cva$Var[2,2],1),"%")),
las=1, cex=1)
legend("bottomright", legend = levels(subfam1), col = give_color(levels(subfam1)), pch = 16)
##  add hulls to plot (merge groups)
for(jj in 1:length(levels(subfam1))){
ii=levels(subfam1)[jj]
kk=chull(cva$CVscores[subfam1==ii,1:2])
lines(cva$CVscores[subfam1==ii,1][c(kk, kk[1])],
cva$CVscores[subfam1==ii,2][c(kk, kk[1])], col=give_color(ii))
}
#CVA
cva<- CVA(pro_red$coords, groups = subfam1, plot= T, rounds= 1000)
# plot the CVA
#plot the data
par(mar=c(4, 4, 1, 1))
plot(cva$CVscores, col=give_color(row.names(cva$CVscores)), pch=16,asp=T,
xlab=paste("1st canonical axis", paste(round(cva$Var[1,2],1),"%")),
ylab=paste("2nd canonical axis", paste(round(cva$Var[2,2],1),"%")),
las=1, cex=1)
legend("bottomright", legend = levels(subfam1), col = give_color(levels(subfam1)), pch = 16)
##  add hulls to plot (merge groups)
for(jj in 1:length(levels(subfam1))){
ii=levels(subfam1)[jj]
kk=chull(cva$CVscores[subfam1==ii,1:2])
lines(cva$CVscores[subfam1==ii,1][c(kk, kk[1])],
cva$CVscores[subfam1==ii,2][c(kk, kk[1])], col=give_color(ii))
}
#CVA
cva<- CVA(pro_red$coords, groups = subfam1, plot= T, rounds= 1000)
# plot the CVA
pdf("CVA_Oliv.pdf", height = 8.50, width = 11.00)
#plot the data
par(mar=c(4, 4, 1, 1))
plot(cva$CVscores, col=give_color(row.names(cva$CVscores)), pch=16,asp=T,
xlab=paste("1st canonical axis", paste(round(cva$Var[1,2],1),"%")),
ylab=paste("2nd canonical axis", paste(round(cva$Var[2,2],1),"%")),
las=1, cex=1)
legend("bottomright", legend = levels(subfam1), col = give_color(levels(subfam1)), pch = 16)
##  add hulls to plot (merge groups)
for(jj in 1:length(levels(subfam1))){
ii=levels(subfam1)[jj]
kk=chull(cva$CVscores[subfam1==ii,1:2])
lines(cva$CVscores[subfam1==ii,1][c(kk, kk[1])],
cva$CVscores[subfam1==ii,2][c(kk, kk[1])], col=give_color(ii))
}
#CVA
cva<- CVA(pro_red$coords, groups = subfam1, plot= T, rounds= 1000)
# plot the CVA
#plot the data
par(mar=c(4, 4, 1, 1))
plot(cva$CVscores, col=give_color(row.names(cva$CVscores)), pch=16,asp=T,
xlab=paste("1st canonical axis", paste(round(cva$Var[1,2],1),"%")),
ylab=paste("2nd canonical axis", paste(round(cva$Var[2,2],1),"%")),
las=1, cex=1)
legend("bottomright", legend = levels(subfam1), col = give_color(levels(subfam1)), pch = 16)
##  add hulls to plot (merge groups)
for(jj in 1:length(levels(subfam1))){
ii=levels(subfam1)[jj]
kk=chull(cva$CVscores[subfam1==ii,1:2])
lines(cva$CVscores[subfam1==ii,1][c(kk, kk[1])],
cva$CVscores[subfam1==ii,2][c(kk, kk[1])], col=give_color(ii))
}
