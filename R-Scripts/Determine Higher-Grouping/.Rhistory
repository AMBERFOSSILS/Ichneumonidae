#plotRefToTarget(ref,PCA$pc.shapes$PC1max)
# Item 4
#plotRefToTarget(ref,PCA$pc.shapes$PC2max)
# Item 5
#plotRefToTarget(ref,PCA$pc.shapes$PC2min)
mat <- matrix(c(4,5,0,1,1,2,1,1,3), 3)
layout(mat, widths=c(1,1,1), heights=c(1,1,1))# set the size of the rows and columns
my_colors = give_color(row.names(PCA$pc.scores))
par(mar=c(4, 4, 1, 1)) # sets the margins
plot(PCA$pc.scores[,1],PCA$pc.scores[,2], col=my_colors, asp=T, las=1,pch=16, cex=1.5)
legend("topleft", legend= levels(subfam1), col= give_color(levels(subfam1)), pch=rep(19,14) )
segments(min(PCA$pc.scores[,1]), 0,  max(PCA$pc.scores[,1]),0, col="grey", lty="dashed")
segments(0, min(PCA$pc.scores[,2]), 0,  max(PCA$pc.scores[,2]), col="grey", lty="dashed")
# in order to name individuals: text(PCA$pc.scores[,1],PCA$pc.scores[,2], species)
ref <- mshape(pro_red$coords)
par(mar = c(0,0,0,0)) # sets the margins
mat <- matrix(c(4,5,0,1,1,2,1,1,3), 3)
layout(mat, widths=c(1,1,1), heights=c(1,1,1))# set the size of the rows and columns
my_colors = give_color(row.names(PCA$pc.scores))
par(mar=c(4, 4, 1, 1)) # sets the margins
plot(PCA$pc.scores[,1],PCA$pc.scores[,2], col=my_colors, asp=T, las=1,pch=16, cex=1.5)
legend("topleft", legend= levels(subfam1), col= give_color(levels(subfam1)), pch=rep(19,14) )
segments(min(PCA$pc.scores[,1]), 0,  max(PCA$pc.scores[,1]),0, col="grey", lty="dashed")
segments(0, min(PCA$pc.scores[,2]), 0,  max(PCA$pc.scores[,2]), col="grey", lty="dashed")
# in order to name individuals: text(PCA$pc.scores[,1],PCA$pc.scores[,2], species)
ref <- mshape(pro_red$coords)
par(mar = c(0,0,0,0)) # sets the margins
par(mar=c(4, 4, 1, 1)) # sets the margins
plot(PCA$pc.scores[,1],PCA$pc.scores[,2], col=my_colors, asp=T, las=1,pch=16, cex=1.5)
legend("left", legend= levels(subfam1), col= give_color(levels(subfam1)), pch=rep(19,14) )
mat <- matrix(c(4,5,0,1,1,2,1,1,3), 3)
layout(mat, widths=c(1,1,1), heights=c(1,1,1))# set the size of the rows and columns
my_colors = give_color(row.names(PCA$pc.scores))
par(mar=c(4, 4, 1, 1)) # sets the margins
plot(PCA$pc.scores[,1],PCA$pc.scores[,2], col=my_colors, asp=T, las=1,pch=16, cex=1.5)
legend("left", legend= levels(subfam1), col= give_color(levels(subfam1)), pch=rep(19,14) )
## the more beautiful version:
mat <- matrix(c(4,5,0,1,1,2,1,1,3), 3)
layout(mat, widths=c(1,1,1), heights=c(1,1,1))# set the size of the rows and columns
my_colors = give_color(row.names(PCA$pc.scores))
par(mar=c(4, 4, 1, 1)) # sets the margins
plot(PCA$pc.scores[,1],PCA$pc.scores[,2], col=my_colors, asp=T, las=1,pch=16, cex=1.5)
legend("bottomleft", legend= levels(subfam1), col= give_color(levels(subfam1)), pch=rep(19,14) )
segments(min(PCA$pc.scores[,1]), 0,  max(PCA$pc.scores[,1]),0, col="grey", lty="dashed")
segments(0, min(PCA$pc.scores[,2]), 0,  max(PCA$pc.scores[,2]), col="grey", lty="dashed")
# in order to name individuals: text(PCA$pc.scores[,1],PCA$pc.scores[,2], species)
ref <- mshape(pro_red$coords)
par(mar = c(0,0,0,0)) # sets the margins
#plotRefToTarget(ref,PCA$pc.shapes$PC1min)
# Item 3
#plotRefToTarget(ref,PCA$pc.shapes$PC1max)
# Item 4
#plotRefToTarget(ref,PCA$pc.shapes$PC2max)
# Item 5
#plotRefToTarget(ref,PCA$pc.shapes$PC2min)
mat <- matrix(c(4,5,0,1,1,2,1,1,3), 3)
layout(mat, widths=c(1,1,1), heights=c(1,1,1))# set the size of the rows and columns
my_colors = give_color(row.names(PCA$pc.scores))
par(mar=c(4, 4, 1, 1)) # sets the margins
plot(PCA$pc.scores[,1],PCA$pc.scores[,2], col=my_colors, asp=T, las=1,pch=16, cex=1.5)
legend("bottomleft", legend= levels(subfam1), col= give_color(levels(subfam1)), pch=rep(19,14) )
segments(min(PCA$pc.scores[,1]), 0,  max(PCA$pc.scores[,1]),0, col="grey", lty="dashed")
segments(0, min(PCA$pc.scores[,2]), 0,  max(PCA$pc.scores[,2]), col="grey", lty="dashed")
# in order to name individuals: text(PCA$pc.scores[,1],PCA$pc.scores[,2], species)
ref <- mshape(pro_red$coords)
par(mar = c(0,0,0,0)) # sets the margins
pdf("PCA.pdf", width = 3, height= 4)
par(mar=c(4, 4, 1, 1)) # sets the margins
x<- highgroup("~/GitHub/Ichneumonidae/R-Scripts/Determine Higher-Grouping")
x<- ("~/GitHub/Ichneumonidae/R-Scripts/Determine Higher-Grouping")
plot(PCA$pc.scores[,1],PCA$pc.scores[,2], col=my_colors, asp=T, las=1,pch=16, cex=1.5)
legend("bottomleft", legend= levels(subfam1), col= give_color(levels(subfam1)), pch=rep(19,14) )
my_colors = give_color(row.names(PCA$pc.scores))
pdf("PCA.pdf", width = 3, height= 4)
par(mar=c(4, 4, 1, 1)) # sets the margins
x<- ("~/GitHub/Ichneumonidae/R-Scripts/Determine Higher-Grouping")
plot(PCA$pc.scores[,1],PCA$pc.scores[,2], col=my_colors, asp=T, las=1,pch=16, cex=1.5)
legend("bottomleft", legend= levels(subfam1), col= give_color(levels(subfam1)), pch=rep(19,14) )
## the more beautiful version:
mat <- matrix(c(4,5,0,1,1,2,1,1,3), 3)
layout(mat, widths=c(1,1,1), heights=c(1,1,1))# set the size of the rows and columns
my_colors = give_color(row.names(PCA$pc.scores))
pdf("PCA.pdf", width = 3, height= 4)
par(mar=c(4, 4, 1, 1)) # sets the margins
x<- ("~/GitHub/Ichneumonidae/R-Scripts/Determine Higher-Grouping")
plot(PCA$pc.scores[,1],PCA$pc.scores[,2], col=my_colors, asp=T, las=1,pch=16, cex=1.5)
legend("bottomleft", legend= levels(subfam1), col= give_color(levels(subfam1)), pch=rep(19,14) )
dev.off()
segments(min(PCA$pc.scores[,1]), 0,  max(PCA$pc.scores[,1]),0, col="grey", lty="dashed")
## the more beautiful version:
mat <- matrix(c(4,5,0,1,1,2,1,1,3), 3)
layout(mat, widths=c(1,1,1), heights=c(1,1,1))# set the size of the rows and columns
my_colors = give_color(row.names(PCA$pc.scores))
pdf("PCA.pdf", width = 3, height= 4)
par(mar=c(4, 4, 1, 1)) # sets the margins
x<- ("~/GitHub/Ichneumonidae/R-Scripts/Determine Higher-Grouping")
plot(PCA$pc.scores[,1],PCA$pc.scores[,2], col=my_colors, asp=T, las=1,pch=16, cex=1.5)
legend("bottomleft", legend= levels(subfam1), col= give_color(levels(subfam1)), pch=rep(19,14) )
segments(min(PCA$pc.scores[,1]), 0,  max(PCA$pc.scores[,1]),0, col="grey", lty="dashed")
segments(0, min(PCA$pc.scores[,2]), 0,  max(PCA$pc.scores[,2]), col="grey", lty="dashed")
dev.off()
# in order to name individuals: text(PCA$pc.scores[,1],PCA$pc.scores[,2], species)
ref <- mshape(pro_red$coords)
par(mar = c(0,0,0,0)) # sets the margins
#plotRefToTarget(ref,PCA$pc.shapes$PC1min)
# Item 3
#plotRefToTarget(ref,PCA$pc.shapes$PC1max)
# Item 4
#plotRefToTarget(ref,PCA$pc.shapes$PC2max)
# Item 5
#plotRefToTarget(ref,PCA$pc.shapes$PC2min)
## the more beautiful version:
mat <- matrix(c(4,5,0,1,1,2,1,1,3), 3)
layout(mat, widths=c(1,1,1), heights=c(1,1,1))# set the size of the rows and columns
my_colors = give_color(row.names(PCA$pc.scores))
pdf("PCA.pdf", width = 3, height= 4)
par(mar=c(4, 4, 1, 1)) # sets the margins
x<- ("~/GitHub/Ichneumonidae/R-Scripts/Determine Higher-Grouping")
plot(PCA$pc.scores[,1],PCA$pc.scores[,2], col=my_colors, asp=T, las=1,pch=16, cex=1.5)
legend("bottomleft", legend= levels(subfam1), col= give_color(levels(subfam1)), pch=rep(19,14) )
segments(min(PCA$pc.scores[,1]), 0,  max(PCA$pc.scores[,1]),0, col="grey", lty="dashed")
segments(0, min(PCA$pc.scores[,2]), 0,  max(PCA$pc.scores[,2]), col="grey", lty="dashed")
# in order to name individuals: text(PCA$pc.scores[,1],PCA$pc.scores[,2], species)
ref <- mshape(pro_red$coords)
par(mar = c(0,0,0,0)) # sets the margins
dev.off()
#plotRefToTarget(ref,PCA$pc.shapes$PC1min)
# Item 3
#plotRefToTarget(ref,PCA$pc.shapes$PC1max)
# Item 4
#plotRefToTarget(ref,PCA$pc.shapes$PC2max)
# Item 5
#plotRefToTarget(ref,PCA$pc.shapes$PC2min)
PCA <-plotTangentSpace(pro_red$coords, groups=subfam1, legend=T)
## the more beautiful version:
mat <- matrix(c(4,5,0,1,1,2,1,1,3), 3)
layout(mat, widths=c(1,1,1), heights=c(1,1,1))# set the size of the rows and columns
my_colors = give_color(row.names(PCA$pc.scores))
pdf("PCA.pdf", width = 3, height= 4)
par(mar=c(4, 4, 1, 1)) # sets the margins
x<- ("~/GitHub/Ichneumonidae/R-Scripts/Determine Higher-Grouping")
plot(PCA$pc.scores[,1],PCA$pc.scores[,2], col=my_colors, asp=T, las=1,pch=16, cex=1.5)
legend("bottomleft", legend= levels(subfam1), col= give_color(levels(subfam1)), pch=rep(19,14) )
segments(min(PCA$pc.scores[,1]), 0,  max(PCA$pc.scores[,1]),0, col="grey", lty="dashed")
segments(0, min(PCA$pc.scores[,2]), 0,  max(PCA$pc.scores[,2]), col="grey", lty="dashed")
# in order to name individuals: text(PCA$pc.scores[,1],PCA$pc.scores[,2], species)
ref <- mshape(pro_red$coords)
par(mar = c(0,0,0,0)) # sets the margins
dev.off()
#plotRefToTarget(ref,PCA$pc.shapes$PC1min)
# Item 3
#plotRefToTarget(ref,PCA$pc.shapes$PC1max)
# Item 4
#plotRefToTarget(ref,PCA$pc.shapes$PC2max)
# Item 5
#plotRefToTarget(ref,PCA$pc.shapes$PC2min)
## the more beautiful version:
mat <- matrix(c(4,5,0,1,1,2,1,1,3), 3)
layout(mat, widths=c(1,1,1), heights=c(1,1,1))# set the size of the rows and columns
my_colors = give_color(row.names(PCA$pc.scores))
pdf("PCA.pdf", width = 3, height= 4)
par(mar=c(4, 4, 1, 1)) # sets the margins
x<- readland.tps("~/GitHub/Ichneumonidae/R-Scripts/Determine Higher-Grouping")
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
require(Morpho)
require(rgl)
options(rgl.useNULL = TRUE) # Suppress the separate window.
knitr::knit_hooks$set(webgl = hook_webgl)
library(geomorph)
setwd("~/GitHub/Ichneumonidae/R-Scripts/Determine Higher-Grouping")
give_color <- function(subfamily) {
if(!is.vector(subfamily)){
color <- switch(substr(subfamily,8,13), "banchi" = "goldenrod1", "fossil"="black", "ophion" = "blueviolet",  "phygad" = "violet","pimpli" = "chartreuse3", "ichneu" = "grey")}
else{
color = matrix( NA, length(subfamily))
for(i in 1:length(subfamily)){
color[i] <-switch(if(nchar(subfamily[i])>13){substr(subfamily[i],8,13)}else{substr(subfamily[i],1,6)}, "banchi" = "goldenrod1", "fossil"="black", "ophion" = "blueviolet",  "phygad" = "violet","pimpli" = "chartreuse3")
}
}
return(color)
}
landmark = readland.tps("blockcourse_highersub.tps",specID = "ID", readcurves = T, warnmsg = TRUE)
##      define classifiers (subfam or tribes)
species = as.factor( substr( dimnames(landmark)[[3]], 1, 6))
subfam = as.factor( substr( dimnames(landmark)[[3]], 8, 13))
areolet = as.factor( substr( dimnames(landmark)[[3]], 15, 15))
tribe = as.factor( substr( dimnames(landmark)[[3]], 17, 19))
##      define Semilandmarks, first LM is the start, last one the end (those are both
##      fixed landmarks, in between are the semilandmarks):
sliders = define.sliders(c(15,22:29,16))
##      procrustes fit - "superimposition" - rotates and scales the landmarks to their closest distance,
##      minimizing the shape and size difference:
use= c("pimpli", "banchi", "phygad", "ophion", "fossil")
proD<-gpagen(landmark, surfaces = NULL, curves= sliders,
PrinAxes = FALSE, max.iter = NULL, ProcD = F, Proj = TRUE,
print.progress = TRUE)
reduced<- proD$coords[,,subfam%in% use]
pro_red<-gpagen(reduced, surfaces = NULL, curves= sliders,
PrinAxes = FALSE, max.iter = NULL, ProcD = F, Proj = TRUE,
print.progress = TRUE)
subfam1<-as.factor(substr(dimnames(pro_red$coords)[[3]],8,13))
species1<-as.factor(substr(dimnames(pro_red$coords)[[3]],1,6))
tribe1<-as.factor(substr(dimnames(pro_red$coords)[[3]],17,19))
PCA <-plotTangentSpace(pro_red$coords, groups=subfam1, legend=T)
## the more beautiful version:
mat <- matrix(c(4,5,0,1,1,2,1,1,3), 3)
layout(mat, widths=c(1,1,1), heights=c(1,1,1))# set the size of the rows and columns
my_colors = give_color(row.names(PCA$pc.scores))
pdf("PCA.pdf", width = 3, height= 4)
par(mar=c(4, 4, 1, 1)) # sets the margins
x<- readland.tps("~/GitHub/Ichneumonidae/R-Scripts/Determine Higher-Grouping")
## the more beautiful version:
mat <- matrix(c(4,5,0,1,1,2,1,1,3), 3)
layout(mat, widths=c(1,1,1), heights=c(1,1,1))# set the size of the rows and columns
my_colors = give_color(row.names(PCA$pc.scores))
pdf("PCA.pdf", width = 3, height= 4)
par(mar=c(4, 4, 1, 1)) # sets the margins
landmark<- readland.tps("~/GitHub/Ichneumonidae/R-Scripts/Determine Higher-Grouping")
## the more beautiful version:
mat <- matrix(c(4,5,0,1,1,2,1,1,3), 3)
layout(mat, widths=c(1,1,1), heights=c(1,1,1))# set the size of the rows and columns
my_colors = give_color(row.names(PCA$pc.scores))
pdf("PCA.pdf", width = 4, height= 3)
par(mar=c(4, 4, 1, 1)) # sets the margins
x<- ("~/GitHub/Ichneumonidae/R-Scripts/Determine Higher-Grouping")
plot(PCA$pc.scores[,1],PCA$pc.scores[,2], col=my_colors, asp=T, las=1,pch=16, cex=1.5)
legend("bottomleft", legend= levels(subfam1), col= give_color(levels(subfam1)), pch=rep(19,14) )
segments(min(PCA$pc.scores[,1]), 0,  max(PCA$pc.scores[,1]),0, col="grey", lty="dashed")
segments(0, min(PCA$pc.scores[,2]), 0,  max(PCA$pc.scores[,2]), col="grey", lty="dashed")
# in order to name individuals: text(PCA$pc.scores[,1],PCA$pc.scores[,2], species)
ref <- mshape(pro_red$coords)
par(mar = c(0,0,0,0)) # sets the margins
dev.off()
#plotRefToTarget(ref,PCA$pc.shapes$PC1min)
# Item 3
#plotRefToTarget(ref,PCA$pc.shapes$PC1max)
# Item 4
#plotRefToTarget(ref,PCA$pc.shapes$PC2max)
# Item 5
#plotRefToTarget(ref,PCA$pc.shapes$PC2min)
## the more beautiful version:
mat <- matrix(c(4,5,0,1,1,2,1,1,3), 3)
layout(mat, widths=c(1,1,1), heights=c(1,1,1))# set the size of the rows and columns
my_colors = give_color(row.names(PCA$pc.scores))
pdf("PCA.pdf", width = 5, height= 4)
par(mar=c(4, 4, 1, 1)) # sets the margins
x<- ("~/GitHub/Ichneumonidae/R-Scripts/Determine Higher-Grouping")
plot(PCA$pc.scores[,1],PCA$pc.scores[,2], col=my_colors, asp=T, las=1,pch=16, cex=1.5)
legend("bottomleft", legend= levels(subfam1), col= give_color(levels(subfam1)), pch=rep(19,14) )
segments(min(PCA$pc.scores[,1]), 0,  max(PCA$pc.scores[,1]),0, col="grey", lty="dashed")
segments(0, min(PCA$pc.scores[,2]), 0,  max(PCA$pc.scores[,2]), col="grey", lty="dashed")
# in order to name individuals: text(PCA$pc.scores[,1],PCA$pc.scores[,2], species)
ref <- mshape(pro_red$coords)
par(mar = c(0,0,0,0)) # sets the margins
dev.off()
#plotRefToTarget(ref,PCA$pc.shapes$PC1min)
# Item 3
#plotRefToTarget(ref,PCA$pc.shapes$PC1max)
# Item 4
#plotRefToTarget(ref,PCA$pc.shapes$PC2max)
# Item 5
#plotRefToTarget(ref,PCA$pc.shapes$PC2min)
## the more beautiful version:
mat <- matrix(c(4,5,0,1,1,2,1,1,3), 3)
layout(mat, widths=c(1,1,1), heights=c(1,1,1))# set the size of the rows and columns
my_colors = give_color(row.names(PCA$pc.scores))
pdf("PCA.pdf", width = 8, height= 7)
par(mar=c(4, 4, 1, 1)) # sets the margins
x<- ("~/GitHub/Ichneumonidae/R-Scripts/Determine Higher-Grouping")
plot(PCA$pc.scores[,1],PCA$pc.scores[,2], col=my_colors, asp=T, las=1,pch=16, cex=1.5)
legend("bottomleft", legend= levels(subfam1), col= give_color(levels(subfam1)), pch=rep(19,14) )
segments(min(PCA$pc.scores[,1]), 0,  max(PCA$pc.scores[,1]),0, col="grey", lty="dashed")
segments(0, min(PCA$pc.scores[,2]), 0,  max(PCA$pc.scores[,2]), col="grey", lty="dashed")
# in order to name individuals: text(PCA$pc.scores[,1],PCA$pc.scores[,2], species)
ref <- mshape(pro_red$coords)
par(mar = c(0,0,0,0)) # sets the margins
dev.off()
#plotRefToTarget(ref,PCA$pc.shapes$PC1min)
# Item 3
#plotRefToTarget(ref,PCA$pc.shapes$PC1max)
# Item 4
#plotRefToTarget(ref,PCA$pc.shapes$PC2max)
# Item 5
#plotRefToTarget(ref,PCA$pc.shapes$PC2min)
## the more beautiful version:
mat <- matrix(c(4,5,0,1,1,2,1,1,3), 3)
layout(mat, widths=c(1,1,1), heights=c(1,1,1))# set the size of the rows and columns
my_colors = give_color(row.names(PCA$pc.scores))
pdf("PCA.pdf", width = 8, height= 7)
par(mar=c(4, 4, 1, 1)) # sets the margins
x<- ("~/GitHub/Ichneumonidae/R-Scripts/Determine Higher-Grouping")
plot(PCA$pc.scores[,1],PCA$pc.scores[,2], col=my_colors, asp=T, las=1,pch=16, cex=1.5, xlab = "PC1 (36.4%)", ylab = "PC2 (21.4%)")
legend("bottomleft", legend= levels(subfam1), col= give_color(levels(subfam1)), pch=rep(19,14) )
segments(min(PCA$pc.scores[,1]), 0,  max(PCA$pc.scores[,1]),0, col="grey", lty="dashed")
segments(0, min(PCA$pc.scores[,2]), 0,  max(PCA$pc.scores[,2]), col="grey", lty="dashed")
# in order to name individuals: text(PCA$pc.scores[,1],PCA$pc.scores[,2], species)
ref <- mshape(pro_red$coords)
par(mar = c(0,0,0,0)) # sets the margins
dev.off()
#plotRefToTarget(ref,PCA$pc.shapes$PC1min)
# Item 3
#plotRefToTarget(ref,PCA$pc.shapes$PC1max)
# Item 4
#plotRefToTarget(ref,PCA$pc.shapes$PC2max)
# Item 5
#plotRefToTarget(ref,PCA$pc.shapes$PC2min)
summary(PCA)
## the more beautiful version:
mat <- matrix(c(4,5,0,1,1,2,1,1,3), 3)
layout(mat, widths=c(1,1,1), heights=c(1,1,1))# set the size of the rows and columns
my_colors = give_color(row.names(PCA$pc.scores))
pdf("PCA.pdf", width = 8, height= 7)
par(mar=c(4, 4, 1, 1)) # sets the margins
x<- ("~/GitHub/Ichneumonidae/R-Scripts/Determine Higher-Grouping")
plot(PCA$pc.scores[,1],PCA$pc.scores[,2], col=my_colors, asp=T, las=1,pch=16, cex=1.5, xlab = "PC1 (36.4%)", ylab = "PC2 (21.4%)", bty="n", main = "PCA of higher-groupings")
legend("bottomleft", legend= levels(subfam1), col= give_color(levels(subfam1)), pch=rep(19,14) )
segments(min(PCA$pc.scores[,1]), 0,  max(PCA$pc.scores[,1]),0, col="grey", lty="dashed")
segments(0, min(PCA$pc.scores[,2]), 0,  max(PCA$pc.scores[,2]), col="grey", lty="dashed")
# in order to name individuals: text(PCA$pc.scores[,1],PCA$pc.scores[,2], species)
ref <- mshape(pro_red$coords)
par(mar = c(0,0,0,0)) # sets the margins
dev.off()
#plotRefToTarget(ref,PCA$pc.shapes$PC1min)
# Item 3
#plotRefToTarget(ref,PCA$pc.shapes$PC1max)
# Item 4
#plotRefToTarget(ref,PCA$pc.shapes$PC2max)
# Item 5
#plotRefToTarget(ref,PCA$pc.shapes$PC2min)
## the more beautiful version:
mat <- matrix(c(4,5,0,1,1,2,1,1,3), 3)
layout(mat, widths=c(1,1,1), heights=c(1,1,1))# set the size of the rows and columns
my_colors = give_color(row.names(PCA$pc.scores))
pdf("PCA.pdf", width = 10, height= 9)
par(mar=c(4, 4, 1, 1)) # sets the margins
x<- ("~/GitHub/Ichneumonidae/R-Scripts/Determine Higher-Grouping")
plot(PCA$pc.scores[,1],PCA$pc.scores[,2], col=my_colors, asp=T, las=1,pch=16, cex=1.5, xlab = "PC1 (36.4%)", ylab = "PC2 (21.4%)", bty="n", main = "PCA of higher-groupings")
legend("bottomleft", legend= levels(subfam1), col= give_color(levels(subfam1)), pch=rep(19,14) )
segments(min(PCA$pc.scores[,1]), 0,  max(PCA$pc.scores[,1]),0, col="grey", lty="dashed")
segments(0, min(PCA$pc.scores[,2]), 0,  max(PCA$pc.scores[,2]), col="grey", lty="dashed")
# in order to name individuals: text(PCA$pc.scores[,1],PCA$pc.scores[,2], species)
ref <- mshape(pro_red$coords)
par(mar = c(0,0,0,0)) # sets the margins
dev.off()
#plotRefToTarget(ref,PCA$pc.shapes$PC1min)
# Item 3
#plotRefToTarget(ref,PCA$pc.shapes$PC1max)
# Item 4
#plotRefToTarget(ref,PCA$pc.shapes$PC2max)
# Item 5
#plotRefToTarget(ref,PCA$pc.shapes$PC2min)
## the more beautiful version:
mat <- matrix(c(4,5,0,1,1,2,1,1,3), 3)
layout(mat, widths=c(1,1,1), heights=c(1,1,1))# set the size of the rows and columns
my_colors = give_color(row.names(PCA$pc.scores))
pdf("PCA.pdf", width = 10, height= 9)
par(mar=c(4, 4, 1, 1)) # sets the margins
x<- ("~/GitHub/Ichneumonidae/R-Scripts/Determine Higher-Grouping")
plot(PCA$pc.scores[,1],PCA$pc.scores[,2], col=my_colors, asp=T, las=1,pch=16, cex=1.5, xlab = "PC1 (36.4%)", ylab = "PC2 (21.4%)", bty="n", main = "PCA of higher-groupings", cex.main=12)
legend("bottomleft", legend= levels(subfam1), col= give_color(levels(subfam1)), pch=rep(19,14) )
segments(min(PCA$pc.scores[,1]), 0,  max(PCA$pc.scores[,1]),0, col="grey", lty="dashed")
segments(0, min(PCA$pc.scores[,2]), 0,  max(PCA$pc.scores[,2]), col="grey", lty="dashed")
# in order to name individuals: text(PCA$pc.scores[,1],PCA$pc.scores[,2], species)
ref <- mshape(pro_red$coords)
par(mar = c(0,0,0,0)) # sets the margins
dev.off()
#plotRefToTarget(ref,PCA$pc.shapes$PC1min)
# Item 3
#plotRefToTarget(ref,PCA$pc.shapes$PC1max)
# Item 4
#plotRefToTarget(ref,PCA$pc.shapes$PC2max)
# Item 5
#plotRefToTarget(ref,PCA$pc.shapes$PC2min)
## the more beautiful version:
mat <- matrix(c(4,5,0,1,1,2,1,1,3), 3)
layout(mat, widths=c(1,1,1), heights=c(1,1,1))# set the size of the rows and columns
my_colors = give_color(row.names(PCA$pc.scores))
pdf("PCA.pdf", width = 10, height= 9)
par(mar=c(4, 4, 1, 1)) # sets the margins
x<- ("~/GitHub/Ichneumonidae/R-Scripts/Determine Higher-Grouping")
plot(PCA$pc.scores[,1],PCA$pc.scores[,2], col=my_colors, asp=T, las=1,pch=16, cex=1.5, xlab = "PC1 (36.4%)", ylab = "PC2 (21.4%)", bty="n", main = "PCA of higher-groupings", cex.main=8)
legend("bottomleft", legend= levels(subfam1), col= give_color(levels(subfam1)), pch=rep(19,14) )
segments(min(PCA$pc.scores[,1]), 0,  max(PCA$pc.scores[,1]),0, col="grey", lty="dashed")
segments(0, min(PCA$pc.scores[,2]), 0,  max(PCA$pc.scores[,2]), col="grey", lty="dashed")
# in order to name individuals: text(PCA$pc.scores[,1],PCA$pc.scores[,2], species)
ref <- mshape(pro_red$coords)
par(mar = c(0,0,0,0)) # sets the margins
dev.off()
#plotRefToTarget(ref,PCA$pc.shapes$PC1min)
# Item 3
#plotRefToTarget(ref,PCA$pc.shapes$PC1max)
# Item 4
#plotRefToTarget(ref,PCA$pc.shapes$PC2max)
# Item 5
#plotRefToTarget(ref,PCA$pc.shapes$PC2min)
## the more beautiful version:
mat <- matrix(c(4,5,0,1,1,2,1,1,3), 3)
layout(mat, widths=c(1,1,1), heights=c(1,1,1))# set the size of the rows and columns
my_colors = give_color(row.names(PCA$pc.scores))
pdf("PCA.pdf", width = 10, height= 9)
par(mar=c(4, 4, 1, 1)) # sets the margins
x<- ("~/GitHub/Ichneumonidae/R-Scripts/Determine Higher-Grouping")
plot(PCA$pc.scores[,1],PCA$pc.scores[,2], col=my_colors, asp=T, las=1,pch=16, cex=1.5, xlab = "PC1 (36.4%)", ylab = "PC2 (21.4%)", bty="n", main = "PCA of higher-groupings", cex.main=4)
legend("bottomleft", legend= levels(subfam1), col= give_color(levels(subfam1)), pch=rep(19,14) )
segments(min(PCA$pc.scores[,1]), 0,  max(PCA$pc.scores[,1]),0, col="grey", lty="dashed")
segments(0, min(PCA$pc.scores[,2]), 0,  max(PCA$pc.scores[,2]), col="grey", lty="dashed")
# in order to name individuals: text(PCA$pc.scores[,1],PCA$pc.scores[,2], species)
ref <- mshape(pro_red$coords)
par(mar = c(0,0,0,0)) # sets the margins
dev.off()
#plotRefToTarget(ref,PCA$pc.shapes$PC1min)
# Item 3
#plotRefToTarget(ref,PCA$pc.shapes$PC1max)
# Item 4
#plotRefToTarget(ref,PCA$pc.shapes$PC2max)
# Item 5
#plotRefToTarget(ref,PCA$pc.shapes$PC2min)
## the more beautiful version:
mat <- matrix(c(4,5,0,1,1,2,1,1,3), 3)
layout(mat, widths=c(1,1,1), heights=c(1,1,1))# set the size of the rows and columns
my_colors = give_color(row.names(PCA$pc.scores))
pdf("PCA.pdf", width = 10, height= 9)
par(mar=c(4, 4, 1, 1)) # sets the margins
x<- ("~/GitHub/Ichneumonidae/R-Scripts/Determine Higher-Grouping")
plot(PCA$pc.scores[,1],PCA$pc.scores[,2], col=my_colors, asp=T, las=1,pch=16, cex=1.5, xlab = "PC1 (36.4%)", ylab = "PC2 (21.4%)", bty="n", main = "PCA of higher-groupings", cex.main=2)
legend("bottomleft", legend= levels(subfam1), col= give_color(levels(subfam1)), pch=rep(19,14) )
segments(min(PCA$pc.scores[,1]), 0,  max(PCA$pc.scores[,1]),0, col="grey", lty="dashed")
segments(0, min(PCA$pc.scores[,2]), 0,  max(PCA$pc.scores[,2]), col="grey", lty="dashed")
# in order to name individuals: text(PCA$pc.scores[,1],PCA$pc.scores[,2], species)
ref <- mshape(pro_red$coords)
par(mar = c(0,0,0,0)) # sets the margins
dev.off()
#plotRefToTarget(ref,PCA$pc.shapes$PC1min)
# Item 3
#plotRefToTarget(ref,PCA$pc.shapes$PC1max)
# Item 4
#plotRefToTarget(ref,PCA$pc.shapes$PC2max)
# Item 5
#plotRefToTarget(ref,PCA$pc.shapes$PC2min)
## the more beautiful version:
mat <- matrix(c(4,5,0,1,1,2,1,1,3), 3)
layout(mat, widths=c(1,1,1), heights=c(1,1,1))# set the size of the rows and columns
my_colors = give_color(row.names(PCA$pc.scores))
pdf("PCA.pdf", width = 10, height= 9)
par(mar=c(4, 4, 1, 1)) # sets the margins
x<- ("~/GitHub/Ichneumonidae/R-Scripts/Determine Higher-Grouping")
plot(PCA$pc.scores[,1],PCA$pc.scores[,2], col=my_colors, asp=T, las=1,pch=16, cex=1.5, xlab = "PC1 (36.4%)", ylab = "PC2 (21.4%)", bty="n", main = "PCA of higher-groupings", cex.main=1.5)
legend("bottomleft", legend= levels(subfam1), col= give_color(levels(subfam1)), pch=rep(19,14) )
segments(min(PCA$pc.scores[,1]), 0,  max(PCA$pc.scores[,1]),0, col="grey", lty="dashed")
segments(0, min(PCA$pc.scores[,2]), 0,  max(PCA$pc.scores[,2]), col="grey", lty="dashed")
# in order to name individuals: text(PCA$pc.scores[,1],PCA$pc.scores[,2], species)
ref <- mshape(pro_red$coords)
par(mar = c(0,0,0,0)) # sets the margins
dev.off()
#plotRefToTarget(ref,PCA$pc.shapes$PC1min)
# Item 3
#plotRefToTarget(ref,PCA$pc.shapes$PC1max)
# Item 4
#plotRefToTarget(ref,PCA$pc.shapes$PC2max)
# Item 5
#plotRefToTarget(ref,PCA$pc.shapes$PC2min)
PCA <-plotTangentSpace(pro_red$coords, groups=subfam1, legend=T)
t.test(PCA)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
require(Morpho)
require(rgl)
options(rgl.useNULL = TRUE) # Suppress the separate window.
knitr::knit_hooks$set(webgl = hook_webgl)
library(geomorph)
setwd("~/GitHub/Ichneumonidae/R-Scripts/Determine Higher-Grouping")
give_color <- function(subfamily) {
if(!is.vector(subfamily)){
color <- switch(substr(subfamily,8,13), "banchi" = "goldenrod1", "fossil"="black", "ophion" = "blueviolet",  "phygad" = "violet","pimpli" = "chartreuse3", "ichneu" = "grey")}
else{
color = matrix( NA, length(subfamily))
for(i in 1:length(subfamily)){
color[i] <-switch(if(nchar(subfamily[i])>13){substr(subfamily[i],8,13)}else{substr(subfamily[i],1,6)}, "banchi" = "goldenrod1", "fossil"="black", "ophion" = "blueviolet",  "phygad" = "violet","pimpli" = "chartreuse3")
}
}
return(color)
}
landmark = readland.tps("blockcourse_highersub.tps",specID = "ID", readcurves = T, warnmsg = TRUE)
##      define classifiers (subfam or tribes)
species = as.factor( substr( dimnames(landmark)[[3]], 1, 6))
subfam = as.factor( substr( dimnames(landmark)[[3]], 8, 13))
areolet = as.factor( substr( dimnames(landmark)[[3]], 15, 15))
tribe = as.factor( substr( dimnames(landmark)[[3]], 17, 19))
##      define Semilandmarks, first LM is the start, last one the end (those are both
##      fixed landmarks, in between are the semilandmarks):
sliders = define.sliders(c(15,22:29,16))
##      procrustes fit - "superimposition" - rotates and scales the landmarks to their closest distance,
##      minimizing the shape and size difference:
use= c("pimpli", "banchi", "phygad", "ophion", "fossil")
proD<-gpagen(landmark, surfaces = NULL, curves= sliders,
PrinAxes = FALSE, max.iter = NULL, ProcD = F, Proj = TRUE,
print.progress = TRUE)
reduced<- proD$coords[,,subfam%in% use]
pro_red<-gpagen(reduced, surfaces = NULL, curves= sliders,
PrinAxes = FALSE, max.iter = NULL, ProcD = F, Proj = TRUE,
print.progress = TRUE)
subfam1<-as.factor(substr(dimnames(pro_red$coords)[[3]],8,13))
species1<-as.factor(substr(dimnames(pro_red$coords)[[3]],1,6))
tribe1<-as.factor(substr(dimnames(pro_red$coords)[[3]],17,19))
PCA <-plotTangentSpace(pro_red$coords, groups=subfam1, legend=T)
t.test(PCA)
PCA
t.test(PCA$pc.scores[,1])
t.test(pro_red$coords)
t.test(PCA$pc.scores)
install.packages("pvclust")
